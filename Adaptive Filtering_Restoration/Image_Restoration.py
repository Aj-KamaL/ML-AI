# -*- coding: utf-8 -*-
"""DIP4_1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GV98Dq1QrSKUCsTpVVunD2_IWTJkxbsg
"""

import numpy as np
import cmath
import matplotlib.pyplot as plt
import numpy as np
import string
import cv2
import random
from scipy import ndimage
import math

img = cv2.imread('in1.tif')
f = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
f=f.astype(np.float)
h=[[1.6, 2.9, 0],[1.3, 1, 0],[0, 0, 0]]

print(f.shape)

w=np.array(h)
w=w/np.sum(w)
fpadx=w.shape[0]-1
fpady=w.shape[1]-1
wpadx=f.shape[0]-1
wpady=f.shape[1]-1
a=int((w.shape[0]-1)/2)
b=int((w.shape[1]-1)/2)
F=np.pad(f,((0,fpadx),(0,fpady)), 'constant')
print (F.shape)
W=np.zeros((f.shape[0]+w.shape[0]-1,f.shape[1]+w.shape[1]-1))
for i in range(0,w.shape[0]):
    for j in range(0,w.shape[1]):
        W[(i-a)%W.shape[0]][(j-b)%W.shape[1]]=w[i][j]

print(F.shape)
print(W.shape)

F_dft=np.fft.fft2(F)
W_dft=np.fft.fft2(W)

F_W=np.fft.ifft2(np.multiply(F_dft,W_dft))
print(F_W.shape)

F_W_deg=np.real(F_W[:f.shape[0],:f.shape[1]])

print(F_W_deg.shape)

cv2.imwrite("unsharpmask.png",F_W_deg)

noise=np.random.randn(256,256)*10

print(noise)

noise2=np.random.randn(256,256)*28
deg_nois=F_W_deg+noise

deg_nois2=F_W_deg+noise2
cv2.imwrite("sd.png",deg_nois2)

# cv2.imwrite("sd2.png",deg_nois2)
cv2.imwrite("sd2.png",deg_nois)

newimg=cv2.imread('sd2.png')
newf = cv2.cvtColor(newimg, cv2.COLOR_BGR2GRAY)
newf=newf.astype(np.float)

# fz=np.zeros(newf.shape[0],newf.shape[1])
# hp=fz;



# hp[0][0]=-8
# hp[1][0]=1
# hp[0][1]=1

# hp[newf.shape[0]-1][0]=1

# hp[0][newf.shape[1]-1]=1



# hp(M,2) = 1; 
# hp(2,N) = 1;
# hp(2,2)=1;
# hp(M,N) = 1;

lapl=[[1,1,1],[1,-8,1],[1,1,1]]
lapl=np.array(lapl)


fpadx=lapl.shape[0]-1
fpady=lapl.shape[1]-1
wpadx=newf.shape[0]-1
wpady=newf.shape[1]-1



a=int((lapl.shape[0]-1)/2)
b=int((lapl.shape[1]-1)/2)


newF=np.pad(newf,((0,fpadx),(0,fpady)), 'constant')

print (newF.shape)

newW=np.zeros((newf.shape[0]+lapl.shape[0]-1,newf.shape[1]+lapl.shape[1]-1))
for i in range(0,lapl.shape[0]):
    for j in range(0,lapl.shape[1]):
        newW[(i-a)%newW.shape[0]][(j-b)%newW.shape[1]]=lapl[i][j]

print(newW.shape)
newF_dft=np.fft.fft2(newF)
newW_dft=np.fft.fft2(newW)

s1=0.001
s2=3.961
Wfinale=[]
minmses=100000000000000
Ffinale=[]
while(s1<=s2):
    
    tempW=np.conjugate(W_dft)
    
    tempaa=0.01*np.abs(newW_dft)*np.abs(newW_dft)+1
    
    tempbb=s1+np.abs(W_dft)*np.abs(W_dft)
    
    tempcc=np.multiply(tempaa,tempbb)
    
    temppW=np.divide(tempW,tempcc)
    
    tempF=np.multiply(temppW,newF_dft)
#     tempF=np.real(tempF)
    
#     tempmses = ((tempF-F_dft)**2).mean()
    tempmses = np.linalg.norm(tempF-F_dft, 2)
#     print(tempmses,minmses)
    
    if(tempmses<minmses):
        print(s1)
        Wfinale=temppW
        minmses=tempmses
        Ffinale=tempF
    s1=s1+0.04

print(Ffinale)

cv2.imwrite("sdfin.png",np.real(np.fft.ifft2(Ffinale))[:256][:256])

